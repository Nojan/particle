#version 130

in vec3 vertexPosition_modelspace;
in vec3 vertexNormal_modelspace;
in vec2 textureCoord;
in ivec4 boneIDs;
in vec4 weights;

out vec2 UV;
out vec3 vertexNormal_eyespace;
out vec3 lightDirection;
out vec3 eye;

uniform mat4 mvp;
uniform mat4 mv;
uniform mat3 viewNormal;
uniform vec4 lightPosition;
const int MAX_BONES = 32;
uniform mat4 bones[MAX_BONES];

void main(){
    mat4 BoneTransform = bones[boneIDs[0]] * weights[0];
    BoneTransform += bones[boneIDs[1]] * weights[1];
    BoneTransform += bones[boneIDs[2]] * weights[2];
    BoneTransform += bones[boneIDs[3]] * weights[3];

    UV = textureCoord;
    vec4 vertex_position = BoneTransform * vec4(vertexPosition_modelspace, 1);
    vec4 position_viewspace = mv * vertex_position;
    vertexNormal_eyespace = viewNormal * vertexNormal_modelspace;
    vec4 lightPosition_eyespace = mv * lightPosition;
    lightDirection = viewNormal * vec3(lightPosition) + vec3(0.01f) * normalize(vec3(lightPosition_eyespace - position_viewspace));
    eye = -vec3(position_viewspace);
    gl_Position =  mvp * vertex_position;
}

